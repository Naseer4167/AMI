{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "Stmt1512442249000",
      "Effect": "Deny",
      "Action": [
        "aws-marketplace-management:*",
        "aws-marketplace:Search*",
        "aws-marketplace:A*",
        "aws-marketplace:C*",
        "aws-marketplace:D*",
        "aws-marketplace:G*",
        "aws-marketplace:L*",
        "aws-marketplace:P*",
        "aws-marketplace:R*",
        "aws-marketplace:T*",
        "aws-marketplace:Update*",
        "aws-marketplace:Start*",
        "aws-marketplace:Untag*",
        "chatbot:*",
        "clouddirectory:*",
        "cloudhsm:*",
        "cloudshell:*",
        "connect:*",
        "dbqms:*",
        "deepcomposer:*",
        "deepracer:*",
        "detective:*",
        "directconnect:*",
        "dlm:*",
        "ds:*",
        "ec2:I*",
        "ec2:P*",
        "ec2:B*",
        "ec2:U*",
        "ec2:TerminateClientVpnConnections*",
        "ec2:AcceptVpcPeeringConnection",
        "ec2:AcceptTransitGatewayPeeringAttachment",
        "ec2:AttachInternetGateway",
        "ec2:AcceptTransitGatewayVpcAttachment",
        "ec2:AssociateVpcCidrBlock",
        "ec2:ExportClientVpnClientCertificateRevocationList",
        "ec2:ExportClientVpnClientConfiguration",
        "ec2:AssociateRouteTable",
        "ec2:AssociateTransitGatewayRouteTable",
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:AttachClassicLinkVpc",
        "ec2:AssociateDhcpOptions",
        "ec2:AssignIpv6Addresses",
        "ec2:AcceptVpcEndpointConnections",
        "ec2:AttachVpnGateway",
        "ec2:AssociateTransitGatewayMulticastDomain",
        "ec2:AssociateClientVpnTargetNetwork",
        "ec2:AllocateAddress",
        "ec2:AuthorizeClientVpnIngress",
        "ec2:AdvertiseByoipCidr",
        "ec2:AssociateSubnetCidrBlock",
        "ec2:AcceptReservedInstancesExchangeQuote",
        "ec2:ApplySecurityGroupsToClientVpnTargetNetwork",
        "ec2:AssociateAddress",
        "ec2:CreateDhcpOptions",
        "ec2:CreateTransitGatewayRouteTable",
        "ec2:CreateTransitGateway",
        "ec2:CreateTransitGatewayPeeringAttachment",
        "ec2:CreatePlacementGroup",
        "ec2:CreateRoute",
        "ec2:CreateInternetGateway",
        "ec2:CreateTransitGatewayMulticastDomain",
        "ec2:CreateVpnGateway",
        "ec2:CreateTrafficMirror*",
        "ec2:CreateVpcPeeringConnection",
        "ec2:CreateReservedInstancesListing",
        "ec2:CancelExportTask",
        "ec2:CreateVpcEndpointConnectionNotification",
        "ec2:CreateRouteTable",
        "ec2:CreateLocalGatewayRouteTableVpcAssociation",
        "ec2:CreateFleet",
        "ec2:CreateCustomerGateway",
        "ec2:CreateVpcEndpointServiceConfiguration",
        "ec2:CreateTransitGatewayRoute",
        "ec2:CreateTransitGatewayVpcAttachment",
        "ec2:CreateDefaultVpc",
        "ec2:CreateFlowLogs",
        "ec2:CancelCapacityReservation",
        "ec2:CreateEgressOnlyInternetGateway",
        "ec2:CreateSubnet",
        "ec2:CancelBundleTask",
        "ec2:CreateVpnConnection",
        "ec2:CreateNatGateway",
        "ec2:CreateVpc",
        "ec2:CreateDefaultSubnet",
        "ec2:CreateCapacityReservation",
        "ec2:CreateSecurityGroup",
        "ec2:CreateNetworkAcl",
        "ec2:CreateInstanceExportTask",
        "ec2:CreateLocalGatewayRoute",
        "ec2:CreateClientVpnRoute",
        "ec2:CancelConversionTask",
        "ec2:CreateVpnConnectionRoute",
        "ec2:CopyFpgaImage",
        "ec2:CreateClientVpnEndpoint",
        "ec2:CreateFpgaImage",
        "ec2:CancelImportTask",
        "ec2:CancelReservedInstancesListing",
        "ec2:CreateNetworkAclEntry",
        "ec2:ConfirmProductInstance",
        "ec2:DetachClassicLinkVpc",
        "ec2:DetachVpnGateway",
        "ec2:DisassociateAddress",
        "ec2:DisassociateClientVpnTargetNetwork",
        "ec2:DisassociateRouteTable",
        "ec2:DisassociateSubnetCidrBlock",
        "ec2:DisassociateEnclaveCertificateIamRole",
        "ec2:DisassociateVpcCidrBlock",
        "ec2:DisassociateInstanceEventWindow",
        "ec2:Disab*",
        "ec2:DisassociateT*",
        "ec2:ExportImage",
        "ec2:ExportTransitGatewayRoutes",
        "ec2:EnableSerialConsoleAccess",
        "ec2:EnableFastLaunch",
        "ec2:EnableImageDeprecation",
        "ec2:EnableIpamOrganizationAdminAccount",
        "ec2:EnableVgwRoutePropagation",
        "ec2:EnableVpcClassicLinkDnsSupport",
        "ec2:EnableTransitGatewayRouteTablePropagation",
        "ec2:EnableVpcClassicLink",
        "emr-serverless:*",
        "evidently:*",
        "frauddetector:*",
        "guardduty:CreateMembers",
        "guardduty:InviteMembers",
        "guardduty:StartMonitoringMembers",
        "importexport:*",
        "mechanicalturk:*",
        "mgh:*",
        "networkmanager:*",
        "opsworks-cm:*",
        "opsworks:*",
        "osis:*",
        "resource-explorer-2:*",
        "route53domains:*",
        "servicediscovery:*",
        "securityhub:*",
        "snowball:*",
        "storagegateway:*",
        "timestream:*",
        "wam:*",
        "workspaces:*",
        "launchwizard:*",
        "q:*",
        "qbusiness:*"
      ],
      "Resource": [
        "*"
      ],
      "Condition": {
        "ArnNotLike": {
          "aws:PrincipalARN": [
            "arn:aws:iam::*:role/RIDY_AWS_RDRATST_AWSJIT1*",
            "arn:aws:iam::*:role/RWIZ_AWS_ACCESS_ROLE",
            "arn:aws:iam::*:role/RIDY_AWS_DRAE01_HPCENVSETUP",
            "arn:aws:iam::*:role/RRCC_AWS_IAMMASTER",
            "arn:aws:iam::*:role/RRDRA*_AWS_SCPRDLAUNCH",
            "arn:aws:iam::*:role/RRCC_AWS_RDRA_ADM",
            "arn:aws:iam::*:role/RIDY_AWS_AWSGLOBALJIT??",
            "arn:aws:iam::*:role/RWIZ_AWS_SCANNER_ROLE"
          ]
        }
      }
    },
    {
      "Action": [
        "ec2:CreateVolume",
        "ec2:AttachVolume"
      ],
      "Condition": {
        "Bool": {
          "ec2:Encrypted": false
        }
      },
      "Effect": "Deny",
      "Resource": "*",
      "Sid": "DenyCreationOfUnencryptedEBS"
    },
    {
      "Action": [
        "ec2:RunInstances"
      ],
      "Condition": {
        "StringNotEquals": {
          "ec2:MetadataHttpTokens": "required"
        }
      },
      "Effect": "Deny",
      "Resource": "arn:aws:ec2:*:*:instance/*",
      "Sid": "IMDSv2Enablement"
    },
    {
      "Action": [
        "autoscaling:CreateLaunchConfiguration"
      ],
      "Condition": {
        "StringNotEquals": {
          "autoscaling:MetadataHttpTokens": "required"
        }
      },
      "Effect": "Deny",
      "Resource": "*",
      "Sid": "IMDSv2EnablementAutoScaling"
    }
  ]
}
